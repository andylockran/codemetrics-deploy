name: Example
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    defaults:
      run: 
        working-directory: cdk-pipeline
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/junit.xml'
            
  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      - run: |

      - name: Generate ZIP
        uses: byteever/action-build-zip@master
        with:
          filename: template.zip
      - name: list files
        run: |
          ls -ltrR
  
      - name: aws-credentials
        # You may pin to the exact commit or the version.
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          # AWS Region, e.g. us-east-2
          aws-region: eu-west-2
          # The Amazon Resource Name (ARN) of the role to assume. Use the provided credentials to assume an IAM role and configure the Actions environment with the assumed role credentials rather than with the provided credentials.
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE }}
          role-session-name: github-action-main
      - name: Upload to S3
        run: |
          aws s3 sync build/ s3://${{ secrets.DEPLOYMENT_BUCKET }}/
    
